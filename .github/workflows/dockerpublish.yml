name: Docker

on:
  push:
    tags:
      - v*

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        postgres: [postgres10, postgres11, postgres12, postgres13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Parse the semver tag
        if: success()
        id: semver
        run: |
          semver=${GITHUB_REF#refs/tags/v}
          regex='(.+)\.(.+)\.(.+)'
          [[ $semver =~ $regex ]]
          echo "::set-output name=major::${BASH_REMATCH[1]}"
          echo "::set-output name=minor::${BASH_REMATCH[1]}.${BASH_REMATCH[2]}"
          echo "::set-output name=patch::${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.${BASH_REMATCH[3]}"

      - name: Set up Docker Buildx
        if: success()
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest

      - name: Available platforms
        if: success()
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo ::set-output name=docker_platforms::linux/amd64,linux/arm/v7
          echo ::set-output name=docker_username::thomaslule
          echo ::set-output name=docker_image::thomaslule/postgres-s3-backup

      - name: Docker Login
        if: success()
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${{ steps.prepare.outputs.docker_username }}" --password-stdin

      - name: Build-tag-push
        if: success()
        run: |
          docker buildx build \
            --output type=image,name=${{ steps.prepare.outputs.docker_image }},push=true \
            --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --tag "${{ steps.prepare.outputs.docker_image }}:latest-${{ matrix.postgres }}" \
            --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.semver.outputs.major }}-${{ matrix.postgres }}" \
            --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.semver.outputs.minor }}-${{ matrix.postgres }}" \
            --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.semver.outputs.patch }}-${{ matrix.postgres }}" \
            --file docker/${{ matrix.postgres }}.Dockerfile .
